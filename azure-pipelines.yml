strategy:
  matrix:
    'Linux':
      imageName: 'ubuntu-16.04'
    'Mac':
      imageName: 'macos-10.13'
    'Windows':
      imageName: 'vs2017-win2016'

pool:
  vmImage: '$(imageName)'

steps:

### Install Rust.
# Copy & pasta from tokio.

# Linux and macOS.
- script: |
    set -e
    curl https://sh.rustup.rs -sSf | sh -s -- -y
    echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
  displayName: "Install rust (*nix)"
  condition: not(eq(variables['Agent.OS'], 'Windows_NT'))

# Windows.
- script: |
    curl -sSf -o rustup-init.exe https://win.rustup.rs
    rustup-init.exe -y
    set PATH=%PATH%;%USERPROFILE%\.cargo\bin
    echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
  displayName: "Install rust (windows)"
  condition: eq(variables['Agent.OS'], 'Windows_NT')

### Build color-backtrace.

- script: |
    cargo build --features=failure-bt
  displayName: 'Building color-backtrace'

### Test color-backtrace

- script: |
    cargo test --features=failure-bt
  displayName: 'Testing color-backtrace'
